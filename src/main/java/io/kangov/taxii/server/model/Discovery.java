/*
 * TAXII Client API
 * TAXII Client API (2.1)
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.kangov.taxii.server.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import io.kangov.taxii.server.ImmutableStyle;
import io.micronaut.core.annotation.*;
import org.immutables.value.Value;

import java.util.List;
import java.util.function.UnaryOperator;

/**
 * The discovery resource contains information about a TAXII Server, such as a human-readable title, description, and
 * contact information, as well as a list of API Roots that it is advertising. It also has an indication of which API
 * Root it considers the default, or the one to use in the absence of another information/user choice.
 */
@JsonPropertyOrder({
  Discovery.JSON_PROPERTY_TITLE,
  Discovery.JSON_PROPERTY_DESCRIPTION,
  Discovery.JSON_PROPERTY_CONTACT,
  Discovery.JSON_PROPERTY_DEFAULT,
  Discovery.JSON_PROPERTY_API_ROOTS
})
@JsonTypeName("discovery")
@JsonSerialize(as = DiscoveryImpl.class)
@JsonDeserialize(as = DiscoveryImpl.class)
@Value.Immutable
@ImmutableStyle
//@Introspected
public interface Discovery {

    /**
     * Exposes the generated builder outside this package
     * <p>
     * While the generated implementation (and consequently its builder) is not
     * visible outside this package, this builder inherits and exposes all public
     * methods defined on the generated implementation's Builder class.
     */
    class Builder extends DiscoveryImpl.Builder {}

    static Discovery create(UnaryOperator<Builder> spec) { return spec.apply(builder()).build(); }
    static Discovery createDiscovery(UnaryOperator<Builder> spec) { return create(spec); }
    static Builder builder() { return new Builder(); }

    default Discovery update(UnaryOperator<Discovery.Builder> builder) {
        return builder.apply(new Discovery.Builder()).build();
    }

    String JSON_PROPERTY_TITLE = "title";
    String JSON_PROPERTY_DESCRIPTION = "description";
    String JSON_PROPERTY_CONTACT = "contact";
    String JSON_PROPERTY_DEFAULT = "default";
    String JSON_PROPERTY_API_ROOTS = "api_roots";

    /**
     * A human-readable plain text name used to identify this server.
     * @return title
     **/
    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    String getTitle();

    /**
     * A human-readable plain text description for this server.
     * @return description
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    String getDescription();

    /**
     * The human-readable plain text contact information for this server and/or the administrator of this server.
     * @return contact
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CONTACT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    String getContact();

    /**
     * Get _default
     * @return _default
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DEFAULT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    String getDefault();

    /**
     * A list of URLs that identify known API Roots. This list MAY be filtered on a per-client basis.  API Root URLs
     * MUST be HTTPS absolute URLs or relative URLs. API Root relative URLs MUST begin with a single \&quot;/\&quot;
     * character and MUST NOT begin with \&quot;//\&quot; or \&quot;../\&quot;. API Root URLs MUST NOT contain a URL
     * query component.
     *
     * @return apiRoots
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_API_ROOTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    List<String> getApiRoots();

}
